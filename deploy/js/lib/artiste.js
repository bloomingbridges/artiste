(function(){var $initializing$$=!1,$fnTest$$=/xyz/.test(function(){})?/\b_super\b/:/.*/;this.Class=function $this$Class$(){};Class.extend=function $Class$extend$($prop$$){function $Class$$(){!$initializing$$&&this.init&&this.init.apply(this,arguments)}var $_super$$=this.prototype;$initializing$$=!0;var $prototype$$=new this;$initializing$$=!1;for(var $name$$0$$ in $prop$$)$prototype$$[$name$$0$$]=typeof $prop$$[$name$$0$$]=="function"&&typeof $_super$$[$name$$0$$]=="function"&&$fnTest$$.test($prop$$[$name$$0$$])?
function($name$$,$fn$$){return function(){var $tmp$$=this._super;this._super=$_super$$[$name$$];var $ret$$=$fn$$.apply(this,arguments);this._super=$tmp$$;return $ret$$}}($name$$0$$,$prop$$[$name$$0$$]):$prop$$[$name$$0$$];$Class$$.prototype=$prototype$$;$Class$$.prototype.constructor=$Class$$;$Class$$.extend=arguments.callee;return $Class$$}})();var Souvenirs={assets:{},sprites:{},enqueue:function($id$$,$path$$){this.assets[$id$$]=loader.addImage($path$$)},retrieve:function($id$$){if($id$$ in this.assets)return this.assets[$id$$];else throw"Asset doesn't exist :<";},register:function($id$$,$sprite$$){this.sprites[$id$$]=$sprite$$},clone:function($id$$){if($id$$ in this.sprites)return this.sprites[$id$$].clone(!0)}},StateMachine={states:{},currentState:{},nextState:{},transitioning:!1,registerStates:function($stateArray$$,$autoStart$$){this.states=
$stateArray$$;$autoStart$$&&this.switchTo($autoStart$$===!0?Object.keys(this.states).shift():$autoStart$$)},update:function(){if(this.currentState instanceof State)this.transitioning===!0?(this.currentState.disappear(),this.nextState.appear()):this.transitioning==="ready"?(this.transitioning=!1,console.log("Transition finished!"),stage.removeChild(StateMachine.currentState.subStage),this.currentState=this.nextState):this.currentState.update()},switchTo:function($newState$$){console.log("Switching to: "+
$newState$$);this.currentState instanceof State&&this.currentState.destroy();this.currentState=new this.states[$newState$$]},transitionTo:function($nextState$$){console.log("Transitioning to: "+$nextState$$);this.nextState=new this.states[$nextState$$];this.transitioning=!0},endTransition:function(){this.transitioning="ready"}},State=Class.extend({init:function($blueprint$$){this.subStage=new Container;this.layout=$blueprint$$;stage.addChild(this.subStage)},update:function(){},appear:function(){},
disappear:function(){},destroy:function(){stage.removeChild(this.subStage)}});
